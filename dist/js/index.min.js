let flag=false;let counter=9;let scoreCounterCircle=0;let scoreCounterCross=0;let winningLine=null;const fieldBoxes=document.querySelectorAll(".bl_field_box");const fieldBoxesArray=[].map.call(fieldBoxes,element=>{return element});const messages=document.querySelectorAll(".bl_message_turnText");const resetBtn=document.getElementById("js_reset");let scoreCircle=document.querySelector(".bl_order_gameCount__circle");let scoreCross=document.querySelector(".bl_order_gameCount__cross");window.addEventListener("load",function(){if(scoreCircle.innerText===""){scoreCircle.innerHTML="-"}else{localStorage.setItem("scoreCircle","")}});const switchBar=()=>{const turnBar=document.querySelector(".box.turn");console.log(turnBar)};switchBar();console.log(messages);const switchMessage=id=>{messages.forEach(message=>{if(message.id===id){message.classList.remove("js_hidden")}else{message.classList.add("js_hidden")}})};switchMessage("js_turn__gameStart");const filterById=(targetArray,idArray)=>{return targetArray.filter(e=>{return e.id===idArray[0]||e.id===idArray[1]||e.id===idArray[2]})};const line1=filterById(fieldBoxesArray,["1-1","1-2","1-3"]);const line2=filterById(fieldBoxesArray,["2-1","2-2","2-3"]);const line3=filterById(fieldBoxesArray,["3-1","3-2","3-3"]);const line4=filterById(fieldBoxesArray,["1-1","2-1","3-1"]);const line5=filterById(fieldBoxesArray,["1-2","2-2","3-2"]);const line6=filterById(fieldBoxesArray,["1-3","2-3","3-3"]);const line7=filterById(fieldBoxesArray,["1-1","2-2","3-3"]);const line8=filterById(fieldBoxesArray,["1-3","2-2","3-1"]);const lineArray=[line1,line2,line3,line4,line5,line6,line7,line8];const resultWin=symbol=>{const result=lineArray.some(line=>{const subResult=line.every(fieldBoxes=>{if(symbol==="maru"){return fieldBoxes.classList.contains("js_maru-checked")}else if(symbol==="batsu"){return fieldBoxes.classList.contains("js_batsu-checked")}});if(subResult){winningLine=line}return subResult});return result};const finishGame=()=>{fieldBoxesArray.forEach(fieldBox=>{fieldBox.classList.add("js_unclickable");console.log("ok")})};const initGame=()=>{flag=false;counter=9;winningLine=null;fieldBoxes.forEach(fieldBox=>{fieldBox.classList.remove("js_maru-checked");fieldBox.classList.remove("js_batsu-checked");fieldBox.classList.remove("js_unclickable")});switchMessage("js_turn__gameStart")};resetBtn.addEventListener("click",function(){initGame()});const markSign=()=>{fieldBoxes.forEach(fieldBox=>{fieldBox.addEventListener("click",()=>{if(flag===true){fieldBox.classList.add("js_batsu-checked");fieldBox.classList.add("js_unclickable");if(resultWin("batsu")){switchMessage("js_win__cross");scoreCounterCross++;finishGame();return}switchMessage("js_turn__circle");flag=false}else{fieldBox.classList.add("js_maru-checked");fieldBox.classList.add("js_unclickable");if(resultWin("maru")){switchMessage("js_win__circle");scoreCounterCircle++;finishGame();return}switchMessage("js_turn__cross");flag=true}counter--;if(counter===0){switchMessage("js_draw");finishGame()}})})};markSign();